[{"name": "app.py", "content": "#Packaging imports\nimport plotly.express as px\nimport seaborn as sb\nimport palmerpenguins as pp\nimport shiny\nfrom shiny.express import input, render, ui\nfrom shiny import reactive\nfrom shinywidgets import render_plotly\n\np_df = pp.load_penguins()\n\n#Adding reactive block for global reactive functions - I am retarded and I hate this\n#There are issues with PyShiny and filtering a data frame with more than one filter - need to figure out later\n@reactive.calc\ndef filtered_data():\n    if input.radio() == \"Yes\":\n        filtered_df_species = p_df[p_df[\"species\"].isin(input.check())]\n        return filtered_df_species\n    else:\n        filtered_df = p_df\n        return filtered_df\n\n#Page options\nui.page_opts(title=\"Palmer Penguins Exploration\", fillable=True)\n\n#Sidebar layout\nwith ui.sidebar(bg = \"#808080\"):\n    ui.h1(\"Settings and Selections\")\n    \"You can select settings and interact with the data graphs through this sidebar. The link to the Git repo is below:\"\n    #Git repo link\n    ui.a(\"Github\", href=\"https://github.com/JSellinger\", target=\"_blank\")\n    #General Settings Card\n    with ui.card():\n        ui.card_header(\"General Settings\")\n        ui.input_dark_mode()\n        ui.input_radio_buttons(\"radio\",\"Filter Data Frame\", [\"Yes\",\"No\"])\n    #Selection Settings for Graphs\n    with ui.card():\n        ui.card_header(\"Graph Interaction\")\n        #Slider\n        ui.input_slider(\"slider_numb\", \"Slider for Bins\", 0, 100, 10)\n        #Selectize\n        ui.input_selectize(\"selectize\", \"Select Island for Scatterplot\", [\"Dream\",\"Biscoe\",\"Torgersen\"])\n        #Numeric Input\n        ui.input_numeric(\"numeric\", \"To be Determined\", 0)\n        #Check Box\n        ui.input_checkbox_group(\"check\", \"Species for Data Grid/Table\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"])\n\n#Function Block for Main Layout\n\n#Main Layout Column\n\"Graphs and Data Visualization\"\nwith ui.layout_columns():\n\n    #It took me awhile to figure out what exactly the reactive.calc was doing but I figured it out.\n    #The reactive.calc function is simply turning it into a special return value that we are supposed to be returning in all our other functions that work with other react decorators and functions - this was not explained very well\n    #This means that we have to filter the data before we graph it though - which means it would change everything?\n    #Reactive Calc Function\n    \n    \n    #Data Table\n    with ui.card():\n        ui.card_header(\"Data Table\")\n        @render.data_frame\n        def table_frame():\n            return render.DataTable(filtered_data())\n    #Data Grid\n    with ui.card():\n        ui.card_header(\"Data Grid\")\n        @render.data_frame\n        def table_grid():\n            return render.DataGrid(filtered_data())\n    #Histogram Plotly\n    with ui.card():\n        ui.card_header(\"Plotly Histogram\")\n        @render_plotly\n        def plotly_hist():\n            return px.histogram(filtered_data(), y= \"species\", nbins = input.slider_numb())\n    #Histogram Seaborn\n    with ui.card():\n        ui.card_header(\"Seaborn Histogram\")\n        @render.plot\n        def seaborn_hist():\n            return sb.histplot(filtered_data(), y = \"species\", bins = input.slider_numb())\n    #Scatterplot\n    with ui.card():\n        ui.card_header(\"Scatterplot\")\n        @render_plotly\n        def scatter_plot():\n            return px.scatter(filtered_data(), x=\"body_mass_g\", y=\"flipper_length_mm\", color=\"species\")\n", "type": "text"}]